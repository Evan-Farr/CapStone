@model SyncMe.Models.Event

@{
    ViewBag.Title = "Create";
}

<h2>New Event</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Title", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Street Address", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.streetAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.streetAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("City", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("State", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.state, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Zip Code", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.zipCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.zipCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label  col-md-2">Start Date</label>
            <div class="col-md-10">
                <input type="date" name="StartDate" />
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">End Date</label>
            <div class="col-md-10">
                <input type="date" name="EndDate" />
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Start Time</label>
            <div class="col-md-10">
                <input type="time" name="StartTime" />
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">End Time</label>
            <div class="col-md-10">
                <input type="time" name="EndTime" />
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Details", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.details, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.details, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Set To Private", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.isPrivate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.isPrivate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @if (User.IsInRole("Admin"))
    {
        @Html.ActionLink("Back to List", "Index")
    }
    else
    {
        @Html.ActionLink("Cancel", "ViewCalendar", "Members")
    }
</div>
