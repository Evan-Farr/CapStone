@model SyncMe.Models.Event

@{
    ViewBag.Title = "GetDirections";
}

<br />
@Html.ActionLink("Done", "ViewCalendar", "Members", null, new { @class = "btn btn-primary btn-md" })
<hr />
<div>
    <h4><strong>Event: </strong>@ViewBag.Name</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayName("address")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.streetAddress)
        </dd>

        <dt>
            @Html.DisplayName("City")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.city)
        </dd>

        <dt>
            @Html.DisplayName("State")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.state)
        </dd>

        <dt>
            @Html.DisplayName("zip code")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.zipCode)
        </dd>

        <dt>
            @Html.DisplayName("Start")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.start)
            @Html.DisplayFor(model => model.startTime)
        </dd>

        <dt>
            @Html.DisplayName("End")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.end)
            @Html.DisplayFor(model => model.endTime)
        </dd>
    </dl>
</div>
<hr />
<br />

<div id="map"></div>
<div id="panel"></div>
<div id="directions-panel"></div>
<div>
    <strong>Mode of Travel: </strong>
    <select id="mode" onchange="calcRoute();">
        <option value="DRIVING">Driving</option>
        <option value="WALKING">Walking</option>
        <option value="BICYCLING">Bicycling</option>
        <option value="TRANSIT">Transit</option>
    </select>
</div>
<br />
@Html.ActionLink("Done", "ViewCalendar", "Members", null, new { @class = "btn btn-primary btn-md" })
<hr />

<script>
        var geocoder;
        var map;
        var directionsDisplay;
        var directionsService;
        var stepDisplay;
        var destination = @Html.Raw(Json.Encode(Model));
        var setDestination;
        var map, infoWindow;
        function initMap() {
            geocoder = new google.maps.Geocoder();
            //directionsService = new google.maps.DirectionsService;
            //directionsDisplay = new google.maps.DirectionsRenderer;
            //var latlng = new google.maps.LatLng(43.0389, -87.9065);
            //var mapOptions = {
            //    center: latlng,
            //    zoom: 7,
            //};
            //map = new google.maps.Map(document.getElementById("map"), mapOptions);
            //infoWindow = new google.maps.InfoWindow;
            // Try HTML5 geolocation.
            //if (navigator.geolocation) {
            //    navigator.geolocation.getCurrentPosition(function(position) {
            //        var pos = {
            //            lat: position.coords.latitude,
            //            lng: position.coords.longitude
            //        };
            //        var directionsService = new google.maps.DirectionsService();
            //        var directionsDisplay = new google.maps.DirectionsRenderer();
            //        infoWindow.setPosition(pos);
            //        infoWindow.setContent('Location found.');
            //        infoWindow.open(map);
            //        map.setCenter(pos);
            //    }, function() {
            //        handleLocationError(true, infoWindow, map.getCenter());
            //    });
            //} else {
            //    // Browser doesn't support Geolocation
            //    handleLocationError(false, infoWindow, map.getCenter());
            //}
            //directionsDisplay.setMap(map);
            codeAddress();
            //calculateAndDisplayRoute();
            if (navigator.geolocation) { 
                navigator.geolocation.getCurrentPosition(function (position) {                                      
                    var pos = {
                                lat: position.coords.latitude,
                                lng: position.coords.longitude
                              };
                    var directionsService = new google.maps.DirectionsService();
                    var directionsDisplay = new google.maps.DirectionsRenderer();
                    var mapOptions = 
                    {
                        zoom: 7, 
                        center: pos, 
                        mapTypeControl: true, 
                        navigationControlOptions:
                        {
                            style: google.maps.NavigationControlStyle.SMALL 
                        },
                        mapTypeId: google.maps.MapTypeId.ROADMAP 
                    };
                    map = new google.maps.Map(document.getElementById("map"), mapOptions);
                    directionsDisplay.setMap(map);
                    directionsDisplay.setPanel(document.getElementById('panel'));
                    var request = {
                        origin: pos,
                        destination: setDestination,
                        travelMode: google.maps.DirectionsTravelMode.DRIVING
                    };

                    directionsService.route(request, function (response, status) {
                        if (status == google.maps.DirectionsStatus.OK) {
                            directionsDisplay.setDirections(response);
                        }
                    });
                });
            }
        }

        function codeAddress() {
            var address = destination.streetAddress + " " + destination.city + " " + destination.state + " " + destination.zipCode;
            setDestination = address;
            geocoder.geocode( { 'address': address}, function(results, status) {
                if (status == 'OK') {
                    map.setCenter(results[0].geometry.location);
                    var marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location,
                        animation: google.maps.Animation.DROP
                    });
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
            });
        }

        //function calculateAndDisplayRoute() {
        //    directionsService.route({
        //        origin: "333 n plankinton ave Milwaukee, wi 53202",
        //        destination: setDestination,
        //        waypoints: null,
        //        optimizeWaypoints: true,
        //        travelMode: 'DRIVING'
        //    }, function(response, status) {
        //        if (status === 'OK') {
        //            directionsDisplay.setDirections(response);
        //            var route = response.routes[0];
        //            var summaryPanel = document.getElementById('directions-panel');
        //            summaryPanel.innerHTML = '';
        //            for (var i = 0; i < route.legs.length; i++) {
        //                var routeSegment = i + 1;
        //                summaryPanel.innerHTML += '<b>Route Segment: ' + routeSegment +
        //                    '</b><br>';
        //                summaryPanel.innerHTML += route.legs[i].start_address + ' to ';
        //                summaryPanel.innerHTML += route.legs[i].end_address + '<br>';
        //                summaryPanel.innerHTML += route.legs[i].distance.text + '<br><br>';
        //            }
        //        } else {
        //            window.alert('Directions request failed due to ' + status);
        //        }
        //    });
        //}

        //function calcRoute() {
        //    var start = document.getElementById('start').value;
        //    var end = setDestination;
        //    var request = {
        //        origin: start,
        //        destination: end,
        //        travelMode: 'DRIVING'
        //    };
        //    directionsService.route(request, function(result, status) {
        //        if (status == 'OK') {
        //            directionsDisplay.setDirections(result);
        //        }
        //    });
        //}

        //function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        //    infoWindow.setPosition(pos);
        //    infoWindow.setContent(browserHasGeolocation ?
        //                          'Error: The Geolocation service failed.' :
        //                          'Error: Your browser doesn\'t support geolocation.');
        //    infoWindow.open(map);
        //}
</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDU4IWEgKdyXr-7GvaPLs3-bP286jkrj1g&callback=initMap"></script>